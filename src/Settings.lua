local Settings = {
    HexAddresses = true;
    ChunkDecompiler = {
        Opcodes = {
            [0]  = {N="move",      Args={"A", "B"}};
            [1]  = {N="loadk",     Args={"A", "Bx"}};
            [2]  = {N="loadbool",  Args={"A", "B", "C"}};
            [3]  = {N="loadnil",   Args={"A", "B"}};
            [4]  = {N="getupval",  Args={"A", "B"}};
            [5]  = {N="getglobal", Args={"A", "Bx"}};
            [6]  = {N="gettable",  Args={"A", "B", "C"}};
            [7]  = {N="setglobal", Args={"A", "Bx"}};
            [8]  = {N="setupval",  Args={"A", "B"}};
            [9]  = {N="settable",  Args={"A", "B", "C"}};
            [10] = {N="newtable",  Args={"A", "B", "C"}};
            [11] = {N="self",      Args={"A", "B", "C"}};
            [12] = {N="add",       Args={"A", "B", "C"}};
            [13] = {N="sub",       Args={"A", "B", "C"}};
            [14] = {N="mul",       Args={"A", "B", "C"}};
            [15] = {N="div",       Args={"A", "B", "C"}};
            [16] = {N="mod",       Args={"A", "B", "C"}};
            [17] = {N="pow",       Args={"A", "B", "C"}};
            [18] = {N="unm",       Args={"A", "B"}};
            [19] = {N="not",       Args={"A", "B"}};
            [20] = {N="len",       Args={"A", "B"}};
            [21] = {N="concat",    Args={"A", "B", "C"}};
            [22] = {N="jmp",       Args={"sBx"}};
            [23] = {N="eq",        Args={"A", "B", "C"}};
            [24] = {N="lt",        Args={"A", "B", "C"}};
            [25] = {N="lt",        Args={"A", "B", "C"}};
            [26] = {N="test",      Args={"A", "C"}};
            [27] = {N="testset",   Args={"A", "B", "C"}};
            [28] = {N="call",      Args={"A", "B", "C"}};
            [29] = {N="tailcall",  Args={"A", "B", "C"}};
            [30] = {N="return",    Args={"A", "B"}};
            [31] = {N="forloop",   Args={"A", "sBx"}};
            [32] = {N="forprep",   Args={"A", "sBx"}};
            [33] = {N="tforloop",  Args={"A", "C"}};
            [34] = {N="setlist",   Args={"A", "B", "C"}};
            [35] = {N="close",     Args={"A"}};
            [36] = {N="closure",   Args={"A", "Bx"}};
            [37] = {N="vararg",    Args={"A", "B"}};
        };
    };
    PseudoLua = {
        Opcodes = {
            [0]  = {N="move",      Args={"A", "B"}};
            [1]  = {N="loadk",     Args={"A", "Bx"}};
            [2]  = {N="loadbool",  Args={"A", "B", "C"}};
            [3]  = {N="loadnil",   Args={"A", "B"}};
            [4]  = {N="getupval",  Args={"A", "B"}};
            [5]  = {N="getglobal", Args={"A", "Bx"}};
            [6]  = {N="gettable",  Args={"A", "B", "C"}};
            [7]  = {N="setglobal", Args={"A", "Bx"}};
            [8]  = {N="setupval",  Args={"A", "B"}};
            [9]  = {N="settable",  Args={"A", "B", "C"}};
            [10] = {N="newtable",  Args={"A", "B", "C"}};
            [11] = {N="self",      Args={"A", "B", "C"}};
            [12] = {N="add",       Args={"A", "B", "C"}};
            [13] = {N="sub",       Args={"A", "B", "C"}};
            [14] = {N="mul",       Args={"A", "B", "C"}};
            [15] = {N="div",       Args={"A", "B", "C"}};
            [16] = {N="mod",       Args={"A", "B", "C"}};
            [17] = {N="pow",       Args={"A", "B", "C"}};
            [18] = {N="unm",       Args={"A", "B"}};
            [19] = {N="not",       Args={"A", "B"}};
            [20] = {N="len",       Args={"A", "B"}};
            [21] = {N="concat",    Args={"A", "B", "C"}};
            [22] = {N="jmp",       Args={"sBx"}};
            [23] = {N="eq",        Args={"A", "B", "C"}};
            [24] = {N="lt",        Args={"A", "B", "C"}};
            [25] = {N="lt",        Args={"A", "B", "C"}};
            [26] = {N="test",      Args={"A", "C"}};
            [27] = {N="testset",   Args={"A", "B", "C"}};
            [28] = {N="call",      Args={"A", "B", "C"}};
            [29] = {N="tailcall",  Args={"A", "B", "C"}};
            [30] = {N="return",    Args={"A", "B"}};
            [31] = {N="forloop",   Args={"A", "sBx"}};
            [32] = {N="forprep",   Args={"A", "sBx"}};
            [33] = {N="tforloop",  Args={"A", "C"}};
            [34] = {N="setlist",   Args={"A", "B", "C"}};
            [35] = {N="close",     Args={"A"}};
            [36] = {N="closure",   Args={"A", "Bx"}};
            [37] = {N="vararg",    Args={"A", "B"}};
        };
    };
};

return Settings;
